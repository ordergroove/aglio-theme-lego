mixin Badge(method)
    //- Draw a badge for a given HTTP method
    case method
        when 'GET'
            span.badge.get: i.fa.fa-arrow-down
        when 'HEAD'
            span.badge.head: i.fa.fa-info-circle
        when 'OPTIONS'
            span.badge.options: i.fa.fa-dot-circle-o
        when 'POST'
            span.badge.post: i.fa.fa-plus
        when 'PUT'
            span.badge.put: i.fa.fa-pencil
        when 'PATCH'
            span.badge.patch: i.fa.fa-pencil
        when 'DELETE'
            span.badge.delete: i.fa.fa-times
        default
            span.badge: i.fa.fa-dot-circle-o

mixin Nav()
    //- Draw a navigation bar, which includes links to individual
    //- resources and actions.
    nav
        if self.api.navItems && self.api.navItems.length
            .resource-group
                .heading
                  .chevron
                    i.open.fa.fa-angle-down
                  a(href='#top') Getting started
                .collapse-content
                  ul: each item in self.api.navItems
                    li
                      a(href=item[1])!= item[0]
        each resourceGroup in self.api.resourceGroups || []
            .resource-group
                .heading
                  .chevron
                    i.open.fa.fa-angle-down
                  a(href=resourceGroup.elementLink)!= resourceGroup.name || 'API resources'
                .collapse-content
                  ul
                    each item in resourceGroup.navItems || []
                      li
                        a(href=item[1])!= item[0]
                    each resource in resourceGroup.resources || []
                      li
                          if !self.condenseNav || (resource.actions.length != 1)
                              //- a(href=resource.elementLink)!= resource.name || 'Resource'
                              ul: each action in resource.actions || []
                                  li: a(href=action.elementLink)
                                    +Badge(action.method)
                                    != action.name || action.method + ' ' + (action.attributes && action.attributes.uriTemplate || resource.uriTemplate)
                          else
                              - var action = resource.actions[0]
                              a(href=action.elementLink)
                                  +Badge(action.method)
                                  != action.name || resource.name || action.method + ' ' + (action.attributes && action.attributes.uriTemplate || resource.uriTemplate)

mixin Parameters(params)
  .parameter
    .title
      strong URI Parameters
    .parameter__content
      dl.inner
        each param in params || []
          .dl-row
            .dl-row__content
              dt
                .parameter-name= self.urldec(param.name)
                if [param].required
                  .parameter-meta= param.type  + ' (required)'
                else
                  .parameter-meta= param.type + ' (optional)'
              dd
                != self.markdown(param.description)

mixin RequestResponse(title, request, collapse)
  .title
    strong
      = title
      if request.name
        | &nbsp;&nbsp;
        code= request.name
    if collapse && request.hasContent
      .collapse-button
        span.close Hide
          span.open Show
  +RequestResponseBody(request, collapse)

mixin RequestResponseBody(http, collapse, showBlank)
  if http.hasContent || showBlank
    div(class=collapse ? 'collapse-content' : ''): .inner
      if http.description
        .description!= self.markdown(http.description)

      if Object.keys(http.headers).length
        h5 Headers
        pre: code
          each item, index in http.headers
            != self.highlight(item.name + ': ' + item.value, 'http')
            if index < http.headers.length - 1
              br
        div(style="height: 1px;")

    if http.body
        h5 Body
        pre: code
          != self.highlight(http.body, null, ['json', 'yaml', 'xml', 'javascript'])
        div(style="height: 1px;")

    if !http.hasContent
      .description.text-muted This response has no content.
      div(style="height: 1px;")

mixin Responses(responses)
  .tabs
    .title
      h3 Response
    span.example-names
      each response in responses
        span.tab-button= response.name
    each response in responses
      .tab
        +RequestResponseBody(response, false, true)


mixin Requests(requests)
  each request in requests
    .tab
      +RequestResponseBody(request, false, true)

mixin Examples(action)
  .action-example
    .title
      a.action-example-toggle(href="#") Examples
    .action-wrap
      if action.hasRequest
        .title
          h3 Request
        .tabs
          each example in action.examples
            +Requests(example.requests)

      each example in action.examples
        +Responses(example.responses)

mixin Action(action)
  if action.description
    != self.markdown(action.description)

  //- A list of sub-sections for parameters, requests
  //- and responses.
  if action.parameters.length
    +Parameters(action.parameters)

  if action.requestAttributes.length
    .parameter
      .title
        strong Request Attributes
      .parameter__content
        dl.inner
          each attribute in action.requestAttributes
            +Property(attribute)

  if action.responseAttributes.length
    .parameter
      .title
        strong Response Attributes
      .parameter__content
        dl.inner
          each attribute in action.responseAttributes
            +Property(attribute)

mixin Property(property)
  .dl-row
    .dl-row__content
      dt
        .parameter-name= property.name
        if property.required
          .parameter-meta= property.type + ' (required)'
        else
          .parameter-meta= property.type + ' (optional)'
      dd
        if property.description
          p!= self.markdown(property.description)
        else
          p

  if property.properties.length
    .parameter.nested
      .title
        .collapse-button
          span.close Hide child attributes
          span.open Show child attributes
      .collapse-content
        .dl-inner
          each inner in property.properties
            +Property(inner)
